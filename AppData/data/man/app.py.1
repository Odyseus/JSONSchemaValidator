.\" Man page generated from reStructuredText.
.
.TH "APP.PY" "1" "Dec 16, 2018" "" "JSON Schema Validator"
.SH NAME
app.py \- Utility to validate data from JSON schemas.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH HINT
.sp
This Python application can generate a system executable with Bash completions support. See \fBapp.py generate\fP\&.
.SH CLI SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C

app.py (\-h | \-\-help | \-\-manual | \-\-version)
app.py validate (\-d <path> | \-\-data\-file=<path>)
                (\-s <path> | \-\-schema\-file=<path>)
                [\-\-data\-prop=<name>] [\-\-schema\-prop=<name>]
app.py generate system_executable

.ft P
.fi
.UNINDENT
.UNINDENT
.SH MENTIONS
.sp
This application uses the \fI\%jsonschema\fP <\fBhttps://github.com/Julian/jsonschema\fP> Python module to validate data.
.SH REQUIREMENTS
.sp
No mayor requirements are needed to run this application other than Python 3.5+.
.SH DETAILED USAGE
.SS CLI options
.INDENT 0.0
.IP \(bu 2
\fB\-h\fP or \fB\-\-help\fP: Display this application basic help screen.
.IP \(bu 2
\fB\-\-manual\fP: Display this application manual.
.IP \(bu 2
\fB\-\-version\fP: Show this application version.
.UNINDENT
.SS Commands
.SS app.py validate
.sp
Validate data found inside the file specified by the \fB\-\-data\-file\fP CLI option against a JSON schema found inside the file specified by the \fB\-\-schema\-file\fP CLI option.
.SS Options
.INDENT 0.0
.IP \(bu 2
\fB\-d <path>\fP or \fB\-\-data\-file=<path>\fP: Path to a Python or JSON file containing the data to validate against a JSON schema.
.IP \(bu 2
\fB\-s <path>\fP or \fB\-\-schema\-file=<path>\fP: Path to a Python or JSON file containing the JSON schema to validate the data against.
.IP \(bu 2
\fB\-\-data\-prop=<name>\fP: Name of a property found inside the file specified in \fB\-\-data\-file\fP\&. This property must contain the data to validate against a JSON schema.
.IP \(bu 2
\fB\-\-schema\-prop=<name>\fP:  Name of a property found inside the file specified in \fB\-\-schema\-file\fP\&. This property must contain the data that will be used as a JSON schema.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
The \fB\-\-data\-prop\fP and \fB\-\-schema\-prop\fP CLI options can be used to point to properties inside Python and JSON files.
.IP \(bu 2
Properties can be nested (e.g., prop0.prop1.propN).
.IP \(bu 2
Only JSON files with the \fB\&.json\fP file extension and Python files with the \fB\&.py\fP file extension are supported.
.UNINDENT
.UNINDENT
.UNINDENT
.SS app.py generate
.SS Sub\-commands
.INDENT 0.0
.IP \(bu 2
\fBsystem_executable\fP: Create an executable for the \fBapp.py\fP application on the system \fBPATH\fP to be able to run it from anywhere.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
The system executable creation process will ask for an executable name and the absolute path to store the executable file (the default is \fB$HOME/.local/bin\fP).
.IP \(bu 2
It will also ask for bash completions creation.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH AUTHOR
Odyseus
.SH COPYRIGHT
2016-2018, Odyseus
.\" Generated by docutils manpage writer.
.
